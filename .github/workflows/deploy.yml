name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build project
      run: npm run build
      
    - name: Adapt paths for GitHub Pages
      run: |
        node -e "
        const fs = require('fs');
        const path = require('path');
        
        // Leer configuraciÃ³n del repositorio
        const config = JSON.parse(fs.readFileSync('public/github-config.json', 'utf8'));
        const repoName = config.baseUrl.replace(/\//g, '');
        console.log('Repository name:', repoName);
        
        // Actualizar index.html
        if (fs.existsSync('dist/index.html')) {
          let indexContent = fs.readFileSync('dist/index.html', 'utf8');
          indexContent = indexContent.replace(/href=\"\//g, \`href=\"/\${repoName}/\`);
          indexContent = indexContent.replace(/src=\"\//g, \`src=\"/\${repoName}/\`);
          indexContent = indexContent.replace(/content=\"\//g, \`content=\"/\${repoName}/\`);
          fs.writeFileSync('dist/index.html', indexContent);
          console.log('Updated index.html');
        }
        
        // Actualizar manifest.webmanifest
        if (fs.existsSync('dist/manifest.webmanifest')) {
          let manifestContent = fs.readFileSync('dist/manifest.webmanifest', 'utf8');
          const manifest = JSON.parse(manifestContent);
          
          // Actualizar start_url y scope
          manifest.start_url = \`/\${repoName}/\`;
          manifest.scope = \`/\${repoName}/\`;
          
          // Actualizar rutas de iconos
          if (manifest.icons) {
            manifest.icons = manifest.icons.map(icon => {
              if (icon.src && !icon.src.startsWith('/')) {
                icon.src = \`/\${repoName}/\${icon.src}\`;
              } else if (icon.src && icon.src.startsWith('/') && !icon.src.startsWith(\`/\${repoName}/\`)) {
                icon.src = \`/\${repoName}\${icon.src}\`;
              }
              return icon;
            });
          }
          
          fs.writeFileSync('dist/manifest.webmanifest', JSON.stringify(manifest));
          console.log('Updated manifest.webmanifest');
        }
        
        // Actualizar service worker si existe
        if (fs.existsSync('dist/sw.js')) {
          let swContent = fs.readFileSync('dist/sw.js', 'utf8');
          swContent = swContent.replace(/self\.location\.origin/g, \`self.location.origin + '/\${repoName}'\`);
          fs.writeFileSync('dist/sw.js', swContent);
          console.log('Updated sw.js');
        }
        
        console.log('Path adaptation completed successfully');
        "
      
    - name: Create .nojekyll
      run: touch dist/.nojekyll
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4